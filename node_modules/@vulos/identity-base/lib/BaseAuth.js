import {Application} from "./Application.js";
import {UserInfo} from "./UserInfo.js";
import {User} from "./User.js";
export class BaseAuth {
    /**
     * An interface for an OpenID client
     @param application {Application}
     @param endpoint {string?}
     */
    constructor(application, endpoint) {
        if (!endpoint) {
            endpoint = 'https://identity.vulos.io'
        }
        this.application = application
        this.endpoint = endpoint
    }

    /**
     * Create an authentication URL
     * @param authVerifier
     * @returns {Promise<string>}
     */
    async createAuthUrl(authVerifier) { }

    /**
     * Process the callback arguments
     * @param authVerifier {any}
     * @param params {any}
     * @returns {Promise<User>}
     */
    async processCallback(authVerifier, params) { }

    /**
     * Get user info
     * @param accessToken {string}
     * @returns {Promise<UserInfo>}
     */
    async getUserInfo(accessToken) {}

    /**
     * Refresh the token
     * @param refreshToken {string}
     * @returns {Promise<{access_token?: string, refresh_token?: string, id_token?: string, token_type?: string, expires_at?: number}>}
     */
    async refreshTokens(refreshToken) {}

    /**
     * Connect to the Vulos Identity Server
     * @returns {Promise<void>}
     */
    async connect() {}

    /**
     * Create an authentication verifier object
     * @returns {any}
     */
    createVerifier() { }
}