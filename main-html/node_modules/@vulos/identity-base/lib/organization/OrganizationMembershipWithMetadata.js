import {OrganizationMembership} from "./OrganizationMembership.js";
import {OrganizationRole} from "./OrganizationRole.js";

export class OrganizationMembershipWithMetadata extends OrganizationMembership {

    /**
     * Like the OrganizationMembership object, but with more metadata about roles, and some personal info about the user
     * @param api {OrganizationApi}
     * @param membership {{roles: {name: string, id: string}[], firstName: string, lastName: string, email:string, organizationId: number, membershipId: string, userId: string}}
     */
    constructor(api, membership) {
        super(api, membership);
        this.roles = []
        for (const role of membership.roles) {
            this.roles.push(new OrganizationRole(api, this, role))
        }
        this.firstName = membership.firstName
        this.lastName = membership.lastName
        this.email = membership.email
    }


    /**
     * Get extra metadata for this member, like their roles, first name, last name, and email
     * @param membership {OrganizationMembership}
     * @returns {Promise<OrganizationMembershipWithMetadata|false>}
     */
    static async fromMembership(membership) {
        try {
            const metadata = await membership.api.memberInfo(membership.organizationId, membership.membershipId);
            return new OrganizationMembershipWithMetadata(membership.api, metadata)
        } catch {
            return false;
        }
    }

    /**
     * Get all the roles for this membership
     * @returns {Promise<boolean|OrganizationRole[]>}
     */
    async getRoles() {
        return this.roles;
    }

}