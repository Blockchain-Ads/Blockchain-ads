import { BaseApi } from "../BaseApi.js";
import { User } from "../User.js";

export class ProfileApi extends BaseApi {
    /**
     * The Profile API
     * @param user { User }
     * @param endpoint { string }
     */
    constructor(user, endpoint) {
        super(user, endpoint + '/api/v1/profile');
    }

    /**
     * Get public information about a specific user
     * @param id {string}
     * @returns {Promise<{firstName?: string, lastName?: string, country?: {alpha2: string, name: string}, email?: {value: string, confirmed: boolean}, kycVerified?: boolean, state?: string, profilePicture?: string}>}
     */
    async info(id) {
        return await this.request(`${id}`, "get", null, "profile:info")
    }

    /**
     * @param id {number}
     * @return {Promise<{name: string, address?: string, city?: string, country?: string, state?: string, website?: string, verified?: boolean, uniqueId?: string, zipCode?: string}>}
     */
    async organization(id) {
        return await this.request(`organization/${id}`, "get", null, "profile:organization")
    }


    /**
     * @param search {string}
     * @param amount {number?}
     * @param offset {number?}
     * @return {Promise<{id: number, name: string, address?: string, city?: string, country?: string, state?: string, website?: string, verified?: boolean, uniqueId?: string, zipCode?: string}[]>}
     */
    async organizationSearch(search, amount, offset) {
        let searchUrl = `organization/search/${encodeURIComponent(search)}`
        if (amount) {
            searchUrl += `/${encodeURIComponent(amount)}`
            if (offset) {
                searchUrl += `/${encodeURIComponent(offset)}`
            }
        }
        return await this.request(searchUrl, "get", null, "profile:organization:search")
    }
}