import axios from "axios";
import { User } from "./User.js";
import { cache } from "./Cache.js";

export class BaseApi {
    /**
     * Create an API instance
     * @param user {User}
     * @param apiUrl {string}
     */
    constructor(user, apiUrl) {
        this.user = user
        this.apiUrl = apiUrl
    }

    /**
     * Preform a request on this API
     * @param url {string}
     * @param method { 'get' | 'post' | 'delete' | 'put' }
     * @param data {any}
     * @param cachePrefix {string|null}
     * @returns {Promise<any>}
     */
    async request(url, method = 'get', data = null, cachePrefix = null) {

        const accessToken = await this.user.getAccessToken()
        try {
            const cacheKey = cachePrefix ? (cachePrefix + ':' + url) : url
            const response = await cache(cacheKey, async () => await axios({
                url: url,
                baseURL: this.apiUrl,
                data: data,
                method: method.toUpperCase(),
                headers: {
                    "Authorization": "Bearer " + accessToken
                }
            }))
            return response.data
        } catch(e) {
            throw e.data
        }
    }
}